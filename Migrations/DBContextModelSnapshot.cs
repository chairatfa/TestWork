// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWork.Models;

namespace TestWork.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestWork.Models.Running", b =>
                {
                    b.Property<int>("RunningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RunningCode")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("RunningDes")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RunningLast")
                        .HasColumnType("int");

                    b.Property<int>("RunningNext")
                        .HasColumnType("int");

                    b.Property<string>("RunningPrefix")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RunningPrevious")
                        .HasColumnType("int");

                    b.Property<string>("RunningYear")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RunningId");

                    b.ToTable("Running");
                });

            modelBuilder.Entity("TestWork.Models.Users", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fullname")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("char(2)");

                    b.Property<string>("TelNumber")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserCode");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
